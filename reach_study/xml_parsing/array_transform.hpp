#ifndef POINT_SUPPORT_ARRAY_TRANSFORM_H
#define POINT_SUPPORT_ARRAY_TRANSFORM_H

#include <eigen3/Eigen/Geometry>

#include <stdio.h>
#include <stdlib.h>

/**
 * @namespace ReachArray
 */
namespace ReachArray {

/**
 * @class ArrayTF
 * 
 * @brief This class takes in an array of size 16 generated by the xml parser and transforms 
 * the data into various forms that can then be easily used in the client server setup!
 */
class ArrayTF {
    public:

        /**
         * @brief This function inputs an array of pose data (representing a matrix of type
         * Isometrey3D) and performs a series of transformations to produce a quaternion.
         * 
         * @param poseArray: The array holding the pose information
         * 
         * @returns 
         * A quaternion of the pose
         */
        static Eigen::Quaternion<_Float64> getQuaternion(_Float64 * poseArray);

    private:

        /** 
         * @brief This function takes an input of a static array of size 16 and transforms
         * it into an pose of type Isometry3D
         *  
         * @param poseArray: The array holding the pose information
         * 
         * @returns
         * A Isometry3D of the pose
         */
        static Eigen::Isometry3d getIsometry(_Float64 * poseArray);  
};    

} //namespace ReachArray

#endif // POINT_SUPPORT_ARRAY_TRANSFORM_H
